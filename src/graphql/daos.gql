query getDAO($id: uuid!, $permissions_where: permissions_bool_exp = {permission: {_eq: "admin"}}) {
    daos_by_pk(id: $id) {
        youtube_url
        whitelisted_flags
        wdwd
        updated_at
        token_benefits {
            amount
            created_at
            dao_id
            description
            id
            title
            token
            updated_at
        }
        slug
        mv
        logo_url
        chains
        socials {
            network
            url
        }
        permissions(where: $permissions_where) {
            user {
                about
                attitudes
                bio
                blacklistedFlags
                createdAt
                device
                id
                init
                knowledges
                languages
                name
                pfp
                skills
                updatedAt
                username
                wallet
                whitelistedFlags
            }
            permission
        }
        id
        how_to_join
        hangouts
        ens
        description
        created_at
        categories
        blacklisted_flags
        background_url
        accomplishments
        name
        description
        faq
        token
        gates {
            id
            keys
            attitudes
            knowledge
            links
            nft_type
            published
            gate_name
            badge
            holders {
                id
                name
            }
            categories
            description
            tasks {
                id
            }
        }
        bounties {
            categories
            description
            directions
            end_date
            headline
            id
            level
            links
            post_date
            reward
        }
    }
}

query getDAOBySlug($slug: String = "", $permissions_where: permissions_bool_exp = {permission: {_eq: "admin"}}) {
    daos(where: { slug: { _eq: $slug } }) {
        accomplishments
        name
        description
        background_url
        blacklisted_flags
        categories
        created_at
        description
        ens
        faq
        hangouts
        how_to_join
        id
        logo_url
        chains
        socials {
            network
            url
        }
        permissions(where: $permissions_where) {
            user {
                about
                attitudes
                bio
                blacklistedFlags
                createdAt
                device
                id
                init
                knowledges
                languages
                name
                pfp
                skills
                updatedAt
                username
                wallet
                whitelistedFlags
            }
            permission
        }
        mv
        slug
        token
        token_benefits {
            amount
            created_at
            dao_id
            description
            id
            title
            token
            updated_at
        }
        updated_at
        wdwd
        whitelisted_flags
        youtube_url
        gates {
            id
            keys
            attitudes
            knowledge
            links
            nft_type
            published
            gate_name
            badge
            holders {
                id
                name
            }
            tasks {
                id
            }
            categories
            description
        }
        bounties {
            categories
            description
            directions
            end_date
            headline
            id
            level
            links
            post_date
            reward
        }
    }
}

query listDAOs($permissions_where: permissions_bool_exp = {permission: {_eq: "admin"}}) {
    daos {
        youtube_url
        whitelisted_flags
        wdwd
        updated_at
        token_benefits {
            amount
            created_at
            dao_id
            description
            id
            title
            token
            updated_at
        }
        slug
        mv
        logo_url
        chains
        socials {
            network
            url
        }
        permissions(where: $permissions_where) {
            user {
                about
                attitudes
                bio
                blacklistedFlags
                createdAt
                device
                id
                init
                knowledges
                languages
                name
                pfp
                skills
                updatedAt
                username
                wallet
                whitelistedFlags
            }
            permission
        }
        id
        how_to_join
        hangouts
        ens
        description
        created_at
        categories
        blacklisted_flags
        background_url
        accomplishments
        name
        description
        faq
        token
        gates {
            id
            keys
            attitudes
            knowledge
            links
            nft_type
            published
            gate_name
            badge
            holders {
                id
                name
            }
            tasks {
                id
            }
            categories
            description
        }
        bounties {
            categories
            description
            directions
            end_date
            headline
            id
            level
            links
            post_date
            reward
        }
    }
}

mutation createDAO($object: daos_insert_input = {}) {
    insert_daos_one(object: $object) {
        accomplishments
        name
        description
        background_url
        blacklisted_flags
        categories
        created_at
        description
        ens
        faq
        hangouts
        how_to_join
        id
        logo_url
        chains
        socials {
            network
            url
        }
        permissions {
            user {
                about
                attitudes
                bio
                blacklistedFlags
                createdAt
                device
                id
                init
                knowledges
                languages
                name
                pfp
                skills
                updatedAt
                username
                wallet
                whitelistedFlags
            }
            permission
        }
        mv
        name
        description
        slug
        token
        updated_at
        wdwd
        whitelisted_flags
        youtube_url
    }
}

mutation updateDAO($id: uuid!, $set: daos_set_input = {}) {
    update_daos_by_pk(pk_columns: { id: $id }, _set: $set) {
        background_url
        blacklisted_flags
        categories
        created_at
        description
        ens
        hangouts
        how_to_join
        id
        logo_url
        chains
        socials {
            network
            url
        }
        permissions {
            user {
                about
                attitudes
                bio
                blacklistedFlags
                createdAt
                device
                id
                init
                knowledges
                languages
                name
                pfp
                skills
                updatedAt
                username
                wallet
                whitelistedFlags
            }
            permission
        }
        mv
        slug
        updated_at
        wdwd
        whitelisted_flags
        youtube_url
        accomplishments
        name
        description
        faq
        token
    }
}

mutation deleteDAO($id: uuid!) {
    delete_daos_by_pk(id: $id) {
        id
    }
}

mutation updateDAOSocials($objects: [dao_socials_insert_input!] = {}) {
  insert_dao_socials(objects: $objects, on_conflict: {constraint: dao_socials_dao_id_network_key, update_columns: url}) {
    affected_rows
  }
}


### Bounties ###

mutation createBounty($object: bounties_insert_input = {}) {
    insert_bounties_one(object: $object) {
        categories
        dao_id
        description
        directions
        end_date
        headline
        id
        level
        links
        post_date
        reward
    }
}

mutation deleteBounty($id: uuid!) {
    delete_bounties_by_pk(id: $id) {
        id
    }
}

### Token Benefits ###

mutation insertTokenBenefit($object: token_benefits_insert_input = {}) {
    insert_token_benefits_one(object: $object) {
        amount
        created_at
        dao_id
        description
        id
        title
        token
        updated_at
    }
}

mutation deleteTokenBenefit($id: uuid!) {
    delete_token_benefits_by_pk(id: $id) {
        id
    }
}
